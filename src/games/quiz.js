// –ú–æ–¥—É–ª—å –≤–∏–∫—Ç–æ—Ä–∏–Ω —Å –ø–æ–ª–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
const quizQuestions = {
  movies: {
    easy: [
      {
        question: "–ö–∞–∫–æ–π —Ñ–∏–ª—å–º —Å–Ω—è–ª –ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä –ù–æ–ª–∞–Ω –≤ 2010 –≥–æ–¥—É?",
        options: ["–ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä", "–ù–∞—á–∞–ª–æ", "–¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å", "–î—é–Ω–∫–µ—Ä–∫"],
        correct: 1,
        explanation: "–ù–∞—á–∞–ª–æ (Inception) –±—ã–ª —Å–Ω—è—Ç –ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä–æ–º –ù–æ–ª–∞–Ω–æ–º –≤ 2010 –≥–æ–¥—É."
      },
      {
        question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –≤—ã—à–µ–ª —Ñ–∏–ª—å–º '–¢–∏—Ç–∞–Ω–∏–∫'?",
        options: ["1995", "1997", "1999", "2001"],
        correct: 1,
        explanation: "–¢–∏—Ç–∞–Ω–∏–∫ –≤—ã—à–µ–ª –≤ 1997 –≥–æ–¥—É –∏ —Å—Ç–∞–ª –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –∫–∞—Å—Å–æ–≤—ã—Ö —Ñ–∏–ª—å–º–æ–≤."
      },
      {
        question: "–ö—Ç–æ —Å—ã–≥—Ä–∞–ª –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å –≤ —Ñ–∏–ª—å–º–µ '–§–æ—Ä—Ä–µ—Å—Ç –ì–∞–º–ø'?",
        options: ["–¢–æ–º –ö—Ä—É–∑", "–¢–æ–º –•—ç–Ω–∫—Å", "–ë—Ä—ç–¥ –ü–∏—Ç—Ç", "–õ–µ–æ–Ω–∞—Ä–¥–æ –î–∏–ö–∞–ø—Ä–∏–æ"],
        correct: 1,
        explanation: "–¢–æ–º –•—ç–Ω–∫—Å —Å—ã–≥—Ä–∞–ª –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å –≤ —Ñ–∏–ª—å–º–µ '–§–æ—Ä—Ä–µ—Å—Ç –ì–∞–º–ø'."
      }
    ],
    medium: [
      {
        question: "–ö–∞–∫–æ–π —Ñ–∏–ª—å–º –ø–æ–ª—É—á–∏–ª –û—Å–∫–∞—Ä –∑–∞ –ª—É—á—à–∏–π —Ñ–∏–ª—å–º –≤ 2020 –≥–æ–¥—É?",
        options: ["–î–∂–æ–∫–µ—Ä", "–ü–∞—Ä–∞–∑–∏—Ç—ã", "1917", "–û–¥–Ω–∞–∂–¥—ã –≤ –ì–æ–ª–ª–∏–≤—É–¥–µ"],
        correct: 1,
        explanation: "–ü–∞—Ä–∞–∑–∏—Ç—ã (Parasite) –ø–æ–ª—É—á–∏–ª–∏ –û—Å–∫–∞—Ä –∑–∞ –ª—É—á—à–∏–π —Ñ–∏–ª—å–º –≤ 2020 –≥–æ–¥—É."
      },
      {
        question: "–í –∫–∞–∫–æ–º —Ñ–∏–ª—å–º–µ –∑–≤—É—á–∏—Ç —Ñ—Ä–∞–∑–∞ '–Ø –±—É–¥—É –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è'?",
        options: ["–•–∏—â–Ω–∏–∫", "–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä", "–†–æ–±–æ–∫–æ–ø", "–ë–µ–≥—É—â–∏–π –ø–æ –ª–µ–∑–≤–∏—é"],
        correct: 1,
        explanation: "–§—Ä–∞–∑–∞ 'I'll be back' –∑–≤—É—á–∏—Ç –≤ —Ñ–∏–ª—å–º–µ '–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä'."
      }
    ],
    hard: [
      {
        question: "–ö–∞–∫–æ–π —Ä–µ–∂–∏—Å—Å–µ—Ä —Å–Ω—è–ª —Ñ–∏–ª—å–º '–°—Ç–∞–ª–∫–µ—Ä'?",
        options: ["–ê–Ω–¥—Ä–µ–π –¢–∞—Ä–∫–æ–≤—Å–∫–∏–π", "–°–µ—Ä–≥–µ–π –≠–π–∑–µ–Ω—à—Ç–µ–π–Ω", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–æ–∫—É—Ä–æ–≤", "–ù–∏–∫–∏—Ç–∞ –ú–∏—Ö–∞–ª–∫–æ–≤"],
        correct: 0,
        explanation: "–ê–Ω–¥—Ä–µ–π –¢–∞—Ä–∫–æ–≤—Å–∫–∏–π —Å–Ω—è–ª —Ñ–∏–ª—å–º '–°—Ç–∞–ª–∫–µ—Ä' –≤ 1979 –≥–æ–¥—É."
      }
    ]
  },
  music: {
    easy: [
      {
        question: "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –ø–µ—Å–Ω—é 'Bohemian Rhapsody'?",
        options: ["The Beatles", "Queen", "Led Zeppelin", "Pink Floyd"],
        correct: 1,
        explanation: "Bohemian Rhapsody –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –≥—Ä—É–ø–ø–æ–π Queen."
      },
      {
        question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –≥—Ä—É–ø–ø–∞ The Beatles —Ä–∞—Å–ø–∞–ª–∞—Å—å?",
        options: ["1968", "1970", "1972", "1974"],
        correct: 1,
        explanation: "The Beatles –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Ä–∞—Å–ø–∞–ª–∏—Å—å –≤ 1970 –≥–æ–¥—É."
      }
    ],
    medium: [
      {
        question: "–ö–∞–∫–æ–π –∞–ª—å–±–æ–º –ú–∞–π–∫–ª–∞ –î–∂–µ–∫—Å–æ–Ω–∞ —Å—Ç–∞–ª —Å–∞–º—ã–º –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã–º –≤ –∏—Å—Ç–æ—Ä–∏–∏?",
        options: ["Off the Wall", "Thriller", "Bad", "Dangerous"],
        correct: 1,
        explanation: "–ê–ª—å–±–æ–º 'Thriller' –ú–∞–π–∫–ª–∞ –î–∂–µ–∫—Å–æ–Ω–∞ —Å—Ç–∞–ª —Å–∞–º—ã–º –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã–º –≤ –∏—Å—Ç–æ—Ä–∏–∏."
      }
    ],
    hard: [
      {
        question: "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –æ–ø–µ—Ä—É '–ö–∞—Ä–º–µ–Ω'?",
        options: ["–î–∂—É–∑–µ–ø–ø–µ –í–µ—Ä–¥–∏", "–ñ–æ—Ä–∂ –ë–∏–∑–µ", "–í–æ–ª—å—Ñ–≥–∞–Ω–≥ –ê–º–∞–¥–µ–π –ú–æ—Ü–∞—Ä—Ç", "–†–∏—Ö–∞—Ä–¥ –í–∞–≥–Ω–µ—Ä"],
        correct: 1,
        explanation: "–û–ø–µ—Ä—É '–ö–∞—Ä–º–µ–Ω' –Ω–∞–ø–∏—Å–∞–ª —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä –ñ–æ—Ä–∂ –ë–∏–∑–µ."
      }
    ]
  },
  science: {
    easy: [
      {
        question: "–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ –°–æ–ª–Ω—Ü—É?",
        options: ["–í–µ–Ω–µ—Ä–∞", "–ú–µ—Ä–∫—É—Ä–∏–π", "–ó–µ–º–ª—è", "–ú–∞—Ä—Å"],
        correct: 1,
        explanation: "–ú–µ—Ä–∫—É—Ä–∏–π - —Å–∞–º–∞—è –±–ª–∏–∑–∫–∞—è –∫ –°–æ–ª–Ω—Ü—É –ø–ª–∞–Ω–µ—Ç–∞."
      },
      {
        question: "–°–∫–æ–ª—å–∫–æ –∫–æ—Å—Ç–µ–π –≤ —Ç–µ–ª–µ –≤–∑—Ä–æ—Å–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞?",
        options: ["186", "206", "226", "246"],
        correct: 1,
        explanation: "–í —Ç–µ–ª–µ –≤–∑—Ä–æ—Å–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ 206 –∫–æ—Å—Ç–µ–π."
      }
    ],
    medium: [
      {
        question: "–ö–∞–∫–æ–π —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∞—Ç–æ–º–Ω—ã–π –Ω–æ–º–µ—Ä 79?",
        options: ["–°–µ—Ä–µ–±—Ä–æ", "–ó–æ–ª–æ—Ç–æ", "–ü–ª–∞—Ç–∏–Ω–∞", "–ú–µ–¥—å"],
        correct: 1,
        explanation: "–ó–æ–ª–æ—Ç–æ –∏–º–µ–µ—Ç –∞—Ç–æ–º–Ω—ã–π –Ω–æ–º–µ—Ä 79 –≤ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ."
      }
    ],
    hard: [
      {
        question: "–ö—Ç–æ –æ—Ç–∫—Ä—ã–ª –∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è?",
        options: ["–ì–∞–ª–∏–ª–µ–æ –ì–∞–ª–∏–ª–µ–π", "–ò—Å–∞–∞–∫ –ù—å—é—Ç–æ–Ω", "–ê–ª—å–±–µ—Ä—Ç –≠–π–Ω—à—Ç–µ–π–Ω", "–ù–∏–∫–æ–ª–∞–π –ö–æ–ø–µ—Ä–Ω–∏–∫"],
        correct: 1,
        explanation: "–ò—Å–∞–∞–∫ –ù—å—é—Ç–æ–Ω –æ—Ç–∫—Ä—ã–ª –∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è."
      }
    ]
  },
  games: {
    easy: [
      {
        question: "–í –∫–∞–∫–æ–π –∏–≥—Ä–µ –≥–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π —Å–æ–±–∏—Ä–∞–µ—Ç –∫–æ–ª—å—Ü–∞?",
        options: ["Mario", "Sonic", "Zelda", "Pokemon"],
        correct: 1,
        explanation: "–°–æ–Ω–∏–∫ —Å–æ–±–∏—Ä–∞–µ—Ç –∫–æ–ª—å—Ü–∞ –≤ –∏–≥—Ä–∞—Ö —Å–µ—Ä–∏–∏ Sonic the Hedgehog."
      },
      {
        question: "–ö–∞–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–ª–∞ –∏–≥—Ä—É Minecraft?",
        options: ["Microsoft", "Mojang", "EA", "Ubisoft"],
        correct: 1,
        explanation: "Minecraft –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ —à–≤–µ–¥—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π Mojang."
      }
    ],
    medium: [
      {
        question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –≤—ã—à–ª–∞ –ø–µ—Ä–≤–∞—è –∏–≥—Ä–∞ —Å–µ—Ä–∏–∏ The Legend of Zelda?",
        options: ["1984", "1986", "1988", "1990"],
        correct: 1,
        explanation: "–ü–µ—Ä–≤–∞—è –∏–≥—Ä–∞ The Legend of Zelda –≤—ã—à–ª–∞ –≤ 1986 –≥–æ–¥—É."
      }
    ],
    hard: [
      {
        question: "–ö—Ç–æ —Å–æ–∑–¥–∞–ª –ø–µ—Ä–≤—É—é –≤–∏–¥–µ–æ–∏–≥—Ä—É 'Pong'?",
        options: ["Nolan Bushnell", "Shigeru Miyamoto", "Sid Meier", "Will Wright"],
        correct: 0,
        explanation: "Nolan Bushnell —Å–æ–∑–¥–∞–ª –ø–µ—Ä–≤—É—é –≤–∏–¥–µ–æ–∏–≥—Ä—É 'Pong' –≤ 1972 –≥–æ–¥—É."
      }
    ]
  }
};

// –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω
const quizSessions = new Map();

// –ù–∞—á–∞–ª–æ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
function startQuiz(userId, category, difficulty) {
  const questions = quizQuestions[category]?.[difficulty];
  if (!questions || questions.length === 0) {
    return null;
  }

  // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
  const selectedQuestions = questions
    .sort(() => Math.random() - 0.5)
    .slice(0, Math.min(10, questions.length));

  const session = {
    userId,
    category,
    difficulty,
    questions: selectedQuestions,
    currentQuestion: 0,
    answers: [],
    score: 0,
    startTime: Date.now(),
    timePerQuestion: 15000 // 15 —Å–µ–∫—É–Ω–¥
  };

  quizSessions.set(userId, session);
  return session;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
function getCurrentQuestion(userId) {
  const session = quizSessions.get(userId);
  if (!session || session.currentQuestion >= session.questions.length) {
    return null;
  }
  return session.questions[session.currentQuestion];
}

// –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
function answerQuestion(userId, answerIndex) {
  const session = quizSessions.get(userId);
  if (!session) return null;

  const currentQuestion = session.questions[session.currentQuestion];
  const isCorrect = answerIndex === currentQuestion.correct;
  
  session.answers.push({
    questionId: session.currentQuestion,
    answer: answerIndex,
    isCorrect,
    timeSpent: Date.now() - session.startTime
  });

  if (isCorrect) {
    session.score++;
  }

  session.currentQuestion++;
  return {
    isCorrect,
    correctAnswer: currentQuestion.correct,
    explanation: currentQuestion.explanation,
    isFinished: session.currentQuestion >= session.questions.length
  };
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
function finishQuiz(userId) {
  const session = quizSessions.get(userId);
  if (!session) return null;

  const result = {
    score: session.score,
    totalQuestions: session.questions.length,
    percentage: Math.round((session.score / session.questions.length) * 100),
    timeSpent: Date.now() - session.startTime,
    category: session.category,
    difficulty: session.difficulty
  };

  // –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã
  const rewards = calculateQuizRewards(session.difficulty, result.percentage);
  result.rewards = rewards;

  // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é
  quizSessions.delete(userId);
  
  return result;
}

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥
function calculateQuizRewards(difficulty, percentage) {
  const baseRewards = {
    easy: { coins: 50, gems: 0, experience: 10 },
    medium: { coins: 100, gems: 10, experience: 20 },
    hard: { coins: 200, gems: 25, experience: 30 }
  };

  const base = baseRewards[difficulty];
  const multiplier = percentage / 100;

  return {
    coins: Math.floor(base.coins * multiplier),
    gems: Math.floor(base.gems * multiplier),
    experience: Math.floor(base.experience * multiplier)
  };
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
function getQuizGrade(percentage) {
  if (percentage >= 90) return '–û—Ç–ª–∏—á–Ω–æ! üåü';
  if (percentage >= 70) return '–•–æ—Ä–æ—à–æ! üëç';
  if (percentage >= 50) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ üëå';
  return '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! üí™';
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
function hasActiveSession(userId) {
  return quizSessions.has(userId);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function getQuizProgress(userId) {
  const session = quizSessions.get(userId);
  if (!session) return null;

  return {
    currentQuestion: session.currentQuestion + 1,
    totalQuestions: session.questions.length,
    score: session.score,
    category: session.category,
    difficulty: session.difficulty
  };
}

module.exports = {
  quizQuestions,
  startQuiz,
  getCurrentQuestion,
  answerQuestion,
  finishQuiz,
  hasActiveSession,
  getQuizProgress,
  getQuizGrade
};
