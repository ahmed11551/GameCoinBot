const DatabaseService = require('../services/DatabaseService');
const RedisService = require('../services/RedisService');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /leaderboard
const leaderboardHandler = async (ctx) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤ –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    let leaderboard = await RedisService.getLeaderboard();
    
    if (!leaderboard) {
      leaderboard = await DatabaseService.getLeaderboard(10);
      await RedisService.setLeaderboard(leaderboard, 300); // –ö—ç—à–∏—Ä—É–µ–º –Ω–∞ 5 –º–∏–Ω—É—Ç
    }
    
    let leaderboardText = `üèÜ <b>–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤</b>\n\n`;
    
    leaderboard.forEach((user, index) => {
      const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : `${index + 1}.`;
      const name = user.first_name || user.username || '–ê–Ω–æ–Ω–∏–º';
      leaderboardText += `${medal} ${name} - ${user.coins} –º–æ–Ω–µ—Ç (–£—Ä–æ–≤–µ–Ω—å ${user.level})\n`;
    });
    
    leaderboardText += `\nüí° –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç`;
    
    const keyboard = {
      inline_keyboard: [
        [
          { text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data: 'leaderboard_refresh' },
          { text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }
        ]
      ]
    };
    
    await ctx.reply(leaderboardText, { 
      parse_mode: 'HTML', 
      reply_markup: keyboard 
    });
    
  } catch (error) {
    console.error('Leaderboard handler error:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤');
  }
};

module.exports = leaderboardHandler;
