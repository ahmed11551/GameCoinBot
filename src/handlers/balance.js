const DatabaseService = require('../services/DatabaseService');
const RedisService = require('../services/RedisService');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance
const balanceHandler = async (ctx) => {
  const user = ctx.user;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
  const hasDailyBonus = await RedisService.hasDailyBonus(user.id);
  const canClaimDailyBonus = !hasDailyBonus && 
    (!user.daily_bonus_claimed_at || 
     new Date(user.daily_bonus_claimed_at).toDateString() !== new Date().toDateString());
  
  const balanceText = `üí∞ <b>–ë–∞–ª–∞–Ω—Å –∏ –≤–∞–ª—é—Ç–∞</b>

ü™ô <b>–ú–æ–Ω–µ—Ç—ã:</b> ${user.coins}
üíé <b>–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –∫–∞–º–Ω–∏:</b> ${user.gems}

${canClaimDailyBonus ? 'üéÅ <b>–î–æ—Å—Ç—É–ø–µ–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!</b>' : ''}

üí° <b>–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å:</b>
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: 100 –º–æ–Ω–µ—Ç
‚Ä¢ –í–∏–∫—Ç–æ—Ä–∏–Ω—ã: 50-200 –º–æ–Ω–µ—Ç
‚Ä¢ –ö–ª–∏–∫–µ—Ä –∏–≥—Ä–∞
‚Ä¢ –¢—É—Ä–Ω–∏—Ä—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞: +20% –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É`;

  const keyboard = {
    inline_keyboard: [
      [
        { text: 'üõí –ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—ã', callback_data: 'buy_coins' },
        { text: 'üíé –ö—É–ø–∏—Ç—å –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –∫–∞–º–Ω–∏', callback_data: 'buy_gems' }
      ],
      [
        { text: 'üíé –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞', callback_data: 'premium_subscription' }
      ],
      ...(canClaimDailyBonus ? [[
        { text: 'üéÅ –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å', callback_data: 'claim_daily_bonus' }
      ]] : []),
      [
        { text: 'üìä –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', callback_data: 'transaction_history' },
        { text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }
      ]
    ]
  };

  await ctx.reply(balanceText, { 
    parse_mode: 'HTML', 
    reply_markup: keyboard 
  });
};

module.exports = balanceHandler;
