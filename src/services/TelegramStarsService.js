// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Stars API
const telegramStarsAPI = {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram Stars
  config: {
    botToken: process.env.BOT_TOKEN,
    providerToken: process.env.PROVIDER_TOKEN, // –¢–æ–∫–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    currency: 'XTR', // Telegram Stars
    prices: {
      'gems_small': { amount: 100, label: '–ú–∞–ª—ã–π –ø–∞–∫–µ—Ç –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π' },
      'gems_medium': { amount: 450, label: '–°—Ä–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π' },
      'gems_large': { amount: 800, label: '–ë–æ–ª—å—à–æ–π –ø–∞–∫–µ—Ç –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π' },
      'gems_mega': { amount: 1800, label: '–ú–µ–≥–∞ –ø–∞–∫–µ—Ç –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π' }
    }
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
  createInvoice: function(packageId, userId) {
    const price = this.config.prices[packageId];
    if (!price) return null;

    return {
      provider_token: this.config.providerToken,
      currency: this.config.currency,
      prices: [{ label: price.label, amount: price.amount }],
      payload: JSON.stringify({
        packageId: packageId,
        userId: userId,
        timestamp: Date.now()
      }),
      description: `–ü–æ–∫—É–ø–∫–∞ ${price.label} –≤ CoinMaster Bot`
    };
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
  handleSuccessfulPayment: function(paymentData) {
    try {
      const payload = JSON.parse(paymentData.invoice_payload);
      const { packageId, userId } = payload;
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–µ
      const gemPackage = monetizationService.telegramStars.gemPackages.find(p => p.id === packageId);
      if (!gemPackage) return false;

      // –í—ã–¥–∞–µ–º –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –∫–∞–º–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const totalGems = gemPackage.gems + gemPackage.bonus;
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫
      const purchaseResult = monetizationService.purchaseGems(userId, packageId, gemPackage.stars);
      
      if (purchaseResult.success) {
        // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –ø–æ–∫—É–ø–∫—É
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞: ${userId} –∫—É–ø–∏–ª ${totalGems} –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π –∑–∞ ${gemPackage.stars} Stars`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        return {
          success: true,
          gems: totalGems,
          stars: gemPackage.stars,
          package: gemPackage
        };
      }
      
      return false;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
      return false;
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Ö–æ–¥–æ–≤
  getRevenueStats: function() {
    const stats = monetizationService.getMonetizationStats();
    
    return {
      totalRevenue: stats.revenue, // –í Telegram Stars
      totalPurchases: stats.totalPurchases,
      averagePurchase: stats.totalPurchases > 0 ? stats.revenue / stats.totalPurchases : 0,
      conversionRate: this.calculateConversionRate(),
      estimatedUSD: this.convertStarsToUSD(stats.revenue)
    };
  },

  // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Stars –≤ USD (–ø—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å)
  convertStarsToUSD: function(stars) {
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å: 1 Star = $0.015 (–º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è)
    return Math.round(stars * 0.015 * 100) / 100;
  },

  // –†–∞—Å—á–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
  calculateConversionRate: function() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≤–µ—Ä—à–∏–ª–∏ –ø–æ–∫—É–ø–∫—É
    return 0.05; // 5% –∫–æ–Ω–≤–µ—Ä—Å–∏—è (–ø—Ä–∏–º–µ—Ä)
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
  getTopPackages: function() {
    const packages = monetizationService.telegramStars.gemPackages;
    return packages.sort((a, b) => b.stars - a.stars);
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
  checkPaymentStatus: function(paymentId) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Telegram API
    return {
      status: 'completed',
      amount: 0,
      currency: 'XTR'
    };
  }
};

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
function setupPaymentHandlers(bot) {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
  bot.on('successful_payment', (ctx) => {
    const paymentData = ctx.message.successful_payment;
    const result = telegramStarsAPI.handleSuccessfulPayment(paymentData);
    
    if (result.success) {
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = getUserData(ctx.from.id);
      user.gems += result.gems;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
      ctx.reply(`üéâ <b>–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!</b>

‚úÖ –ü–æ–ª—É—á–µ–Ω–æ: ${result.gems} –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π
‚≠ê –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${result.stars} Telegram Stars

üíé <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> ${user.gems} –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!`, { parse_mode: 'HTML' });
    } else {
      ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
  bot.on('pre_checkout_query', (ctx) => {
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
    ctx.answerPreCheckoutQuery(true);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–≤–æ–π—Å–∞
function sendInvoice(ctx, packageId) {
  const invoice = telegramStarsAPI.createInvoice(packageId, ctx.from.id);
  if (!invoice) {
    ctx.answerCbQuery('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    return;
  }

  ctx.replyWithInvoice(invoice, {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', pay: true }],
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_payment' }]
      ]
    }
  });
}

module.exports = {
  telegramStarsAPI,
  setupPaymentHandlers,
  sendInvoice
};
